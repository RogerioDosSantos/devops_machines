# escape=`

# Docker Image for Build Server (x86)
FROM microsoft/windowsservercore:1803

ADD https://aka.ms/vs/15/release/vs_buildtools.exe C:\TEMP\buildtools.exe

RUN C:\TEMP\buildtools.exe --quiet --wait --norestart --nocache `
    --installPath C:\BuildTools `
    --add Microsoft.VisualStudio.Workload.VCTools;includeRecommended  ` 
    --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 ` 
    --add Microsoft.VisualStudio.Component.Windows10SDK.17134 `
    --add Microsoft.VisualStudio.Component.Windows10SDK.16299.Desktop `
    --add Microsoft.VisualStudio.Component.VC.140 ` 
    --add Microsoft.VisualStudio.Component.VC.ATL ` 
    --add Microsoft.VisualStudio.Component.VC.ATLMFC ` 
    --add Microsoft.VisualStudio.Component.VC.CLI.Support ` 
  || IF "%ERRORLEVEL%"=="3010" EXIT 0
  
SHELL ["powershell.exe", "-ExecutionPolicy", "Bypass", "-Command"]

ENV chocolateyUseWindowsCompression=false

RUN iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

RUN choco install --yes python3 --params '"/InstallDir:C:\tools\python3"'

RUN pip install win-unicode-console

RUN pip install `
    conan `
    conan_package_tools `
    --upgrade --force-reinstall --no-cache
 
WORKDIR "C:\Users\ContainerAdministrator"



# ARG base_image="python:3.7-windowsservercore-1803"
#
# FROM "${base_image}"
#
# MAINTAINER Roger Santos (https://github.com/RogerioDosSantos)
#
# # Reset the shell
# SHELL ["cmd", "/S", "/C"]
#
# # Set up environment to collect install errors.
# COPY install.cmd C:/TEMP/
# ADD https://aka.ms/vscollect.exe C:\\TEMP\\collect.exe
#
# # Install Node.js LTS
# ADD https://nodejs.org/dist/v8.11.3/node-v8.11.3-x64.msi C:\\TEMP\\node-install.msi
# RUN start /wait msiexec.exe /i C:\\TEMP\\node-install.msi /l*vx "%TEMP%\\MSI-node-install.log" /qn ADDLOCAL=ALL
#
# # Download channel for fixed install.
# ARG CHANNEL_URL=https://aka.ms/vs/15/release/channel
# ADD ${CHANNEL_URL} C:\\TEMP\\VisualStudio.chman
#
# # Download and install Build Tools for Visual Studio 2017 for native desktop workload.
# ADD https://aka.ms/vs/15/release/vs_buildtools.exe C:\\TEMP\\vs_buildtools.exe
# RUN C:\\TEMP\\install.cmd C:\\TEMP\\vs_buildtools.exe --quiet --wait --norestart --nocache \
#     --channelUri C:\\TEMP\\VisualStudio.chman \
#     --installChannelUri C:\\TEMP\\VisualStudio.chman \
#     --add Microsoft.VisualStudio.Workload.VCTools --includeRecommended \
#     --installPath C:\\BuildTools
#
# RUN powershell -Command $ErrorActionPreference = 'Stop' ; \
#   echo '*** Installing Conan' ; \
#   pip install conan ; \
#   echo '*** Installing Conan - DONE'
#
# # Use developer command prompt and start PowerShell if no other command specified.
# ENTRYPOINT C:\\BuildTools\\Common7\\Tools\\VsDevCmd.bat &&
# CMD ["powershell.exe", "-NoLogo", "-ExecutionPolicy", "Bypass"]
