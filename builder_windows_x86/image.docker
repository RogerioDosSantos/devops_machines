# escape=`

# Docker Image for Build Server (x86)
FROM microsoft/windowsservercore:1803
# FROM microsoft/windowsservercore:ltsc2016

# Build Arguments
ARG maintainer="Roger Santos (https://github.com/RogerioDosSantos)"
ARG uri="builder/0.0.1@rogersantos/windows_dev"
ARG docker_image="rogersantos/project_name:windows"
ARG flavor="Release"
ENV build_platform=x86
ARG HTTP_PROXY="" 
ARG HTTPS_PROXY="" 
ARG NO_PROXY=""
ARG ZSCALE_CERTIFICATE_URL="https://github.com/RogerioDosSantos/devops_machines/releases/download/dependencies/zscale.crt"

# Identification
LABEL maintainer="${maintainer}"
LABEL uri="${uri}"
LABEL docker_image="${docker_image}"
LABEL flavor="${flavor}"
LABEL description="EmbeddedView container"

# Shell
SHELL ["powershell.exe", "-ExecutionPolicy", "Bypass", "-Command"]

# Install and Configure ZScale Certificate (Windows)
ENV HTTP_PROXY=$HTTP_PROXY
ENV HTTPS_PROXY=$HTTPS_PROXY
ENV NO_PROXY=$NO_PROXY
ADD ${ZSCALE_CERTIFICATE_URL} C:\TEMP\zscale.crt
RUN $ErrorActionPreference = 'Stop'; `
    echo '*** Installing Certificates' ; `
    echo ' - Proxy Configuration' ; `
    Get-ChildItem Env:HTTP_PROXY -ErrorAction Ignore ; `
    Get-ChildItem Env:HTTPS_PROXY -ErrorAction Ignore ; `
    Get-ChildItem Env:NO_PROXY -ErrorAction Ignore ; `
    echo ' - ZScale' ; `
    Import-Certificate -FilePath C:\TEMP\zscale.crt -CertStoreLocation Cert:\LocalMachine\Root -Verbose ; `
    echo '*** Installing Certificates - DONE' ; 

# Install programs
ENV chocolateyUseWindowsCompression=false `
    PYTHONIOENCODING=UTF-8
RUN $ErrorActionPreference = 'Stop'; `
    echo '*** Installing programs' ; `
    echo ' - Chocolatey' ; `
    iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')); `
    echo ' - Git' ; `
    choco install --no-progress --yes git --version=2.19.0 --params '"/InstallDir:C:\tools\git"'; `
    echo ' - CMake' ; `
    choco install --no-progress --yes cmake --version=3.12.2 --params '"/InstallDir:C:\tools\cmake"' --installargs 'ADD_CMAKE_TO_PATH=""System""'; `
    echo ' - Python 3' ; `
    $env:Path += '";C:\tools\python3;C:\tools\python3\Scripts"'; `
    choco install --no-progress --yes python3 --version=3.7.0 --params '"/InstallDir:C:\tools\python3"' ; `
    echo ' - Visual Studio Build Tools' ; `
    choco install --no-progress --yes visualstudio2017buildtools --version=15.9.2.0 ; `
    choco install --no-progress --yes visualstudio2017-workload-vctools --version=1.3.1 ; `
    choco install --no-progress --yes --execution-timeout=0 visualstudio2017-workload-manageddesktop --version=1.2.1 ; `
    echo ' - Conan' ; `
    python -m pip install --quiet --upgrade pip ; `
    python -m pip install win-unicode-console --quiet --upgrade --force-reinstall --no-cache ; `
    python -m pip install conan --quiet --upgrade --force-reinstall --no-cache ; `
    python -m pip install conan_package_tools --quiet --upgrade --force-reinstall --no-cache ; `
    echo '*** Installing programs - DONE' ; 

# Configure Conan
ENV PYTHONWARNINGS="ignore:Unverified HTTPS request"
RUN $ErrorActionPreference = 'Stop'; `
    echo '*** Configuring Conan' ; `
    echo ' - Remotes' ; `
    conan remote remove conan-center ; `
    conan remote add conan-center https://conan.bintray.com FALSE ; `
    conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan FALSE ; `
    conan remote list ; `
    echo ' - Project Folder' ; `
    New-Item -ItemType Directory -Force -Path C:\project ; `
    echo ' - Stage Folder' ; `
    New-Item -ItemType Directory -Force -Path C:\stage ; `
    echo '*** Configuring Conan - DONE' ; 

WORKDIR C:\stage
ENV build_platform=${build_platform}
ENTRYPOINT ["cmd.exe ", "C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat", "${build_platform}"]

# WORKDIR "C:/Users/ContainerAdministrator"
# ENTRYPOINT ["cmd.exe", "C:\Program Files (x86)\Microsoft Visual C++ Build Tools\vcbuildtools_msbuild.bat"]
